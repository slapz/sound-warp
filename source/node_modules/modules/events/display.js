'use strict';

module.exports = {
  register: function() {

    let progressbar = sw.display.getProgressBar(),
      progress = sw.display.getElement('sw.player.progress'),
      progressValue = sw.display.getElement('sw.player.progress.value'),
      seekHandle = progress.find('.seek-handle'),
      width = 0,
      offset = 0;

    function _updateProgressIndicator() {
      width = (sw.player.getCurrentTime() / sw.player.getDuration()) * 100;
      progressValue.css('width', `${width}%`);
    }

    sw.display.on('update-main-title', function(value) {
      sw.display.setValue('sw.display.title.main', value);
    });

    sw.display.on('update-sub-title', function(value) {
      sw.display.setValue('sw.display.title.sub', value);
    });

    sw.display.on('update-artwork', function(value) {
      sw.display.setValue('sw.display.artwork', value);
      sw.display.removeClass('sw.display.artwork', 'hidden');
    });

    progressbar.on('update-value', _updateProgressIndicator);
    progressbar.on('update-min-value', _updateProgressIndicator);
    progressbar.on('update-max-value', _updateProgressIndicator);

    if (seekHandle) {
      function _seekTo(jqEvent) {
        if (jqEvent) jqEvent.preventDefault();
        offset = ((jqEvent.clientX - progress.offset().left) / progress.width()) * 100;
        sw.player.seekTo(offset, true);
      }
      function _off(jqEvent) {
        $(document).off('mousemove', _seekTo);
        seekHandle.off('mouseup');
      }

      progress.on('click', _seekTo);
      seekHandle.on('mousedown', function(jqEvent) {
        jqEvent.preventDefault();
        $(document).on('mousemove', _seekTo);
        seekHandle.on('mouseup', _off);
      });
    }
  },
  unregister: function() {
    sw.display.off('update-main-title');
    sw.display.off('update-sub-title');
    sw.display.off('update-artwork');

    let progressbar = sw.display.getProgressBar();
    progressbar.off('update-value');
    progressbar.off('update-min-value');
    progressbar.off('update-max-value');
  }
};
