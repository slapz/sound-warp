'use strict';

let util = require('util'),
  EventEmitter = require('events'),
  ModulesCollection = require('collections/modules'),
  props = Object.defineProperties,
  defaultOptions;

defaultOptions = {
  client_id: null,
  redirect_uri: 'connect://soundcloud'
};

function SoundWarp() {
  props(this, {
    '_options': {
      configurable: false,
      enumerable: false,
      writable: true,
      value: Object.create(null)
    },
    'modules': {
      configurable: false,
      enumerable: true,
      writable: true,
      value: new ModulesCollection(this)
    }
  });

  EventEmitter.call(this);
}

util.inherits(SoundWarp, EventEmitter);

SoundWarp.prototype.defineModule = function(name, module) {
  let instance;

  if (typeof module === 'object') {
    instance = module;
  } else {
    instance = module.call(this);
  }

  this.modules.push(name, instance);

  Object.defineProperty(this, name, {
    configurable: false,
    enumerable: true,
    set: function(value) {
      // void
    },
    get: function() {
      return this.modules.get(name);
    }
  });

  this.emit('define-module', {
    name: name,
    module: this[name],
    constructor: module
  });
  return this;
};

SoundWarp.prototype.defineModules = function(modules) {
  let _this = this;
  Object.keys(modules).forEach(function(name) {
    _this.defineModule(name, modules[name]);
  });
  return this;
};

SoundWarp.prototype.setOptions = function(options) {
  options = options || {};

  let keys = Object.keys(options),
    _this = this;

  if (keys.length > 0) {
    Object.keys(defaultOptions).forEach(function(key) {
      _this.setOption(key, keys[key] ? options[key] : defaultOptions[key]);
    });
  }
  return this;
};

SoundWarp.prototype.setOption = function(key, value) {
  this._options[key] = value;
  this.emit('update-option', {
    name: key,
    value: value
  });
  return this;
};

SoundWarp.prototype.setClientId = function(value) {
  this.setOption('client_id', value);
  return this;
};

SoundWarp.prototype.setRedirectUri = function(value) {
  this.setOption('redirect_uri', value);
  return this;
};

SoundWarp.prototype.getRedirectUri = function(value) {
  return this._options.redirect_uri;
};

module.exports = SoundWarp;
